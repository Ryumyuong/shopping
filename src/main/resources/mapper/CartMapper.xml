<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CartMapper">
	<insert id="inCart">
    	insert into cart(userId ,s_name, s_description, s_price, fileName) values(#{userId}, #{name}, #{description}, #{price}, #{fileName})
    </insert>
    
    <select id="product" resultType="com.example.domain.Cart">
    	select userId, s_name, s_description, s_price, fileName, c_condition, count(s_name) as count, count(s_name) * s_price as cost from cart where userId = #{userId} and c_condition = "X" group by userId, s_name, s_description, s_price, fileName, c_condition
    </select>
    <select id="total" resultType="com.example.domain.Cart">
	    SELECT sum(cost) as total
		FROM (
		  SELECT userId, s_name, s_description, s_price, fileName, c_condition, COUNT(s_name) AS count, (COUNT(s_name) * s_price) AS cost
		  FROM cart
		  WHERE userId = #{userId} and c_condition = "X"
		  GROUP BY userId, s_name, s_description, s_price, fileName, c_condition
		) AS subquery
    </select>
    
    <select id="runaTotal" resultType="int">
	    SELECT IFNULL(SUM(order_price), 0) AS total from orders where userId = #{userId}
    </select>
    
    <select id="runaTotalAll" resultType="int">
	    select sum(order_price) as total from orders where userId &lt;&gt; "admin"
    </select>
    
    <insert id="order">
    	insert into orders(order_time, username, userId, phone, address, order_menu, order_price) values(DATE_ADD(CURRENT_TIME, INTERVAL 9 HOUR) ,#{username}, #{userId}, #{phone}, #{address}, #{order_menu}, #{total});
    </insert>
    
    <update id="orderCom">
    	update cart set c_condition = "O" where userId = #{userId}
    </update>
    
    <select id="orderListAll" resultType="com.example.domain.Orders">
    	select * from orders order by order_time DESC LIMIT #{offset}, #{limit}
    </select>
    
    <select id="orderList" resultType="com.example.domain.Orders">
    	select * from orders where userId = #{userId} order by order_time DESC LIMIT #{offset}, #{limit}
    </select>
    
    <delete id="deleteCartAll">
    	delete from cart where userId = #{userId} and c_condition = "X"
    </delete>
    
    <delete id="deleteCart">
    	delete from cart where userId = #{userId} and s_name = #{name} and c_condition = "X"
    </delete>
    
    <update id="orderDeliver">
    	update orders set deliver = "배송완료" where id = #{id}
    </update>
    
    <update id="orderUnDeliver2">
    	update orders set deliver = "환불처리" where id = #{id}
    </update>
    
    <delete id="orderUnDeliver">
    	delete from orders where id = #{id}
    </delete>
</mapper>